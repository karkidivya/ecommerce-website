{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { bazarSlice } from \"./bazaarSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport persistStore from \"redux-persist/es/persistStore\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, bazarSlice.reducer);\nexport const store = configureStore({\n  reducer: {\n    \"bazar\": persistedReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","bazarSlice","persistReducer","storage","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","persistConfig","key","version","persistedReducer","reducer","store","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/alpha/training-ground/ecommerce-website/client/src/redux/store.jsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { bazarSlice } from \"./bazaarSlice\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport persistStore from \"redux-persist/es/persistStore\";\n\n\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, bazarSlice.reducer);\n\nexport const store = configureStore({\n  reducer: {\"bazar\": persistedReducer},\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport let persistor = persistStore(store)\n\n\n\n\n\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AACjF,OAAOC,YAAY,MAAM,+BAA+B;AAGxD,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVV;AACF,CAAC;AAED,MAAMW,gBAAgB,GAAGZ,cAAc,CAACS,aAAa,EAAEV,UAAU,CAACc,OAAO,CAAC;AAE1E,OAAO,MAAMC,KAAK,GAAGhB,cAAc,CAAC;EAClCe,OAAO,EAAE;IAAC,OAAO,EAAED;EAAgB,CAAC;EACpCG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAChB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAIY,SAAS,GAAGX,YAAY,CAACM,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}